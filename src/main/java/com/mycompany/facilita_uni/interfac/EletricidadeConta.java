/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.facilita_uni.interfac;

// Imports necessários para integração com o sistema
import com.mycompany.facilita_uni.controle.Controlador;
import com.mycompany.facilita_uni.modelo.Eletrodomestico;
import com.mycompany.facilita_uni.modelo.Usuario;
import com.mycompany.facilita_uni.modelo.ContasLuz;
import com.mycompany.facilita_uni.persistencia.PersistenciaUsuario;
import java.util.List;
/**
 *
 * @author Pedro
 */
public class EletricidadeConta extends javax.swing.JFrame {

    /**
     * Creates new form EletricidadeConta
     */
        public EletricidadeConta() {
        initComponents();
        // Configurações adicionais da janela
        setTitle("Adicionar Conta de Eletricidade");
        setLocationRelativeTo(null); // Centralizar na tela
        setResizable(false); // Impedir redimensionamento
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        datatext = new javax.swing.JTextField();
        salvarFixa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nometext = new javax.swing.JTextField();
        kwhtext = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Data");

        salvarFixa.setText("Salvar");
        salvarFixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarFixaActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        nometext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nometextActionPerformed(evt);
            }
        });

        kwhtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kwhtextActionPerformed(evt);
            }
        });

        jLabel4.setText("Valor KW/h");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datatext, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nometext, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(82, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(kwhtext, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(salvarFixa))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nometext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datatext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kwhtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(salvarFixa)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salvarFixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarFixaActionPerformed
      try {
            // Obter os dados dos campos de texto
            String nome = nometext.getText().trim();
            String data = datatext.getText().trim();
            String valorKwhTexto = kwhtext.getText().trim();
            
            // Validar se os campos não estão vazios
            if (nome.isEmpty() || data.isEmpty() || valorKwhTexto.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Por favor, preencha todos os campos!", 
                    "Campos Obrigatórios", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            // Converter o valor por kWh para número
            double valorPorKwh;
            try {
                valorPorKwh = Double.parseDouble(valorKwhTexto);
                
                if (valorPorKwh <= 0) {
                    javax.swing.JOptionPane.showMessageDialog(this, 
                        "O valor por kWh deve ser positivo!", 
                        "Valor Inválido", 
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Por favor, digite um valor numérico válido para o kWh!", 
                    "Formato Inválido", 
                    javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Carregar o controlador e usuário
            String caminhoArquivo = System.getProperty("user.dir") + "/dados.ser";
            PersistenciaUsuario persistencia = new PersistenciaUsuario();
            Controlador controlador = persistencia.carregarDeArquivo(caminhoArquivo);
            Usuario usuario = controlador.getUsuario();
            
            // Calcular o consumo total de todos os eletrodomésticos
            double consumoTotalKwh = 0;
            List<Eletrodomestico> eletrodomesticos = usuario.getEletrodomesticos();
            
            if (eletrodomesticos != null && !eletrodomesticos.isEmpty()) {
                for (Eletrodomestico eletro : eletrodomesticos) {
                    consumoTotalKwh += eletro.getConsumo(); // Assume que getConsumo() retorna kWh
                }
            }
            
            // Calcular o valor total da conta
            double valorTotal = consumoTotalKwh * valorPorKwh;
            
            // Verificar se há eletrodomésticos cadastrados
            if (consumoTotalKwh == 0) {
                int opcao = javax.swing.JOptionPane.showConfirmDialog(this,
                    "Nenhum eletrodoméstico encontrado ou consumo total é zero.\n" +
                    "Deseja continuar mesmo assim?",
                    "Aviso",
                    javax.swing.JOptionPane.YES_NO_OPTION,
                    javax.swing.JOptionPane.WARNING_MESSAGE);
                
                if (opcao != javax.swing.JOptionPane.YES_OPTION) {
                    return;
                }
            }
            
            // MUDANÇA PRINCIPAL: Criar e adicionar ContasLuz à lista do usuário
            ContasLuz contaLuz = new ContasLuz((int)valorTotal, nome, data, (int)valorPorKwh, (int)consumoTotalKwh);
            usuario.adicionarContaLuz(contaLuz);
            
            // Salvar os dados atualizados
            persistencia.salvarParaArquivo(controlador, caminhoArquivo);
            
            // Mostrar mensagem de sucesso com os cálculos
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Conta de eletricidade salva com sucesso!\n\n" +
                "Nome: " + nome + "\n" +
                "Data de vencimento: " + data + "\n" +
                "Valor por kWh: R$ " + String.format("%.2f", valorPorKwh) + "\n" +
                "Consumo total dos eletrodomésticos: " + String.format("%.2f", consumoTotalKwh) + " kWh\n" +
                "Valor total calculado: R$ " + String.format("%.2f", valorTotal) + "\n" +
                "Quantidade de eletrodomésticos: " + (eletrodomesticos != null ? eletrodomesticos.size() : 0) + "\n" +
                "Total de contas de luz cadastradas: " + usuario.getContasLuz().size(), 
                "Sucesso", 
                javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            // Limpar os campos após processar
            limparCampos();
            
        } catch (Exception e) {
            // Tratar qualquer erro inesperado
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Erro ao processar a conta: " + e.getMessage(), 
                "Erro", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_salvarFixaActionPerformed
  
      private void limparCampos() {
        nometext.setText("");
        datatext.setText("");
        kwhtext.setText("");
        nometext.requestFocus(); // Foca no primeiro campo
    }
    
    private void nometextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nometextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nometextActionPerformed

    private void kwhtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kwhtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kwhtextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EletricidadeConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EletricidadeConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EletricidadeConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EletricidadeConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EletricidadeConta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField datatext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField kwhtext;
    private javax.swing.JTextField nometext;
    private javax.swing.JButton salvarFixa;
    // End of variables declaration//GEN-END:variables
}
