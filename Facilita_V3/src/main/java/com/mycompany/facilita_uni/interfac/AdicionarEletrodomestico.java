/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.facilita_uni.interfac;

// Imports necessários para integração com o sistema
import com.mycompany.facilita_uni.controle.Controlador;
import com.mycompany.facilita_uni.modelo.Eletrodomestico;
import com.mycompany.facilita_uni.modelo.Catalogo;
import com.mycompany.facilita_uni.persistencia.PersistenciaCatalogo;
/**
 *
 * @author Pedro
 */
public class AdicionarEletrodomestico extends javax.swing.JFrame {

    /** 
     * Creates new form AdicionarEletrodomestico
     */
     public AdicionarEletrodomestico() {
        initComponents();
        // Configurações adicionais da janela
        setTitle("Adicionar Eletrodoméstico");
        setLocationRelativeTo(null); // Centralizar na tela
        setResizable(false); // Impedir redimensionamento
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salvarFixa = new javax.swing.JButton();
        JLabel1 = new javax.swing.JLabel();
        nometext = new javax.swing.JTextField();
        tempousotext = new javax.swing.JTextField();
        kwhtext = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        salvarFixa.setText("Salvar");
        salvarFixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarFixaActionPerformed(evt);
            }
        });

        JLabel1.setText("Nome");

        nometext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nometextActionPerformed(evt);
            }
        });

        kwhtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kwhtextActionPerformed(evt);
            }
        });

        jLabel4.setText("Potência KW/h");

        jLabel5.setText("Tempo de uso (horas)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(JLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nometext, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(88, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tempousotext, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kwhtext, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(salvarFixa))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(JLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nometext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kwhtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempousotext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(salvarFixa)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    private void salvarFixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarFixaActionPerformed
        // TODO add your handling code here:
    try {
        // Obter os dados dos campos de texto
        String nome = nometext.getText().trim();
        String wattsTexto = kwhtext.getText().trim(); // Na verdade são WATTS, não kW
        String tempoUsoTexto = tempousotext.getText().trim();

        // Validar se os campos não estão vazios
        if (nome.isEmpty() || wattsTexto.isEmpty() || tempoUsoTexto.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Por favor, preencha todos os campos!",
                "Campos Obrigatórios",
                javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Converter os valores para número
        int watts; // MUDANÇA: int em vez de double, e watts em vez de potencia
        int tempoUso;
        try {
            watts = Integer.parseInt(wattsTexto); // MUDANÇA: parseInt em vez de parseDouble
            tempoUso = Integer.parseInt(tempoUsoTexto);

            if (watts <= 0 || tempoUso <= 0) {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Todos os valores numéricos devem ser positivos!",
                    "Valores Inválidos",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this,
                "Por favor, digite valores numéricos válidos!",
                "Formato Inválido",
                javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Carregar o controlador e catalogo
        String caminhoArquivo = System.getProperty("user.dir") + "/dados.ser";
        PersistenciaCatalogo persistencia = new PersistenciaCatalogo();
        Controlador controlador = persistencia.carregarDeArquivo(caminhoArquivo);
        Catalogo catalogoElet = controlador.getCatalogo();

        // Criar o novo eletrodoméstico com os parâmetros corretos
        Eletrodomestico novoEletrodomestico = new Eletrodomestico(nome, watts, tempoUso);
        catalogoElet.adicionarEletrodomestico(novoEletrodomestico);

        // Salvar os dados no arquivo
        persistencia.salvarParaArquivo(controlador, caminhoArquivo);

        // Calcular o consumo para exibir na mensagem
        double consumoDiarioKwh = (watts * tempoUso) / 1000.0; // Consumo diário em kWh
        double consumoMensalKwh = consumoDiarioKwh * 30; // Consumo mensal em kWh

        // Mostrar mensagem de sucesso
        javax.swing.JOptionPane.showMessageDialog(this,
            "Eletrodoméstico adicionado com sucesso!\n" +
            "Nome: " + nome + "\n" +
            "Potência: " + watts + " W\n" + // MUDANÇA: W em vez de kW
            "Tempo de uso: " + tempoUso + " horas/dia\n" +
            "Consumo diário: " + String.format("%.2f", consumoDiarioKwh) + " kWh\n" +
            "Consumo mensal: " + String.format("%.2f", consumoMensalKwh) + " kWh",
            "Sucesso",
            javax.swing.JOptionPane.INFORMATION_MESSAGE);

        // Limpar os campos após salvar
        limparCampos();

    } catch (Exception e) {
        // Tratar qualquer erro inesperado
        javax.swing.JOptionPane.showMessageDialog(this,
            "Erro ao salvar o eletrodoméstico: " + e.getMessage(),
            "Erro",
            javax.swing.JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    
    }//GEN-LAST:event_salvarFixaActionPerformed

       private void limparCampos() {
        nometext.setText("");
        kwhtext.setText("");
        tempousotext.setText("");
        nometext.requestFocus(); // Foca no primeiro campo
    }

    
    private void nometextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nometextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nometextActionPerformed

    private void kwhtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kwhtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kwhtextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdicionarEletrodomestico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdicionarEletrodomestico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdicionarEletrodomestico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdicionarEletrodomestico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdicionarEletrodomestico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField kwhtext;
    private javax.swing.JTextField nometext;
    private javax.swing.JButton salvarFixa;
    private javax.swing.JTextField tempousotext;
    // End of variables declaration//GEN-END:variables
}
